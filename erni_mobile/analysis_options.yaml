dart_code_metrics:
  anti-patterns:
    - long-method:
        exclude:
          - lib/core/resources/**
          - lib/core/views/**
          - lib/core/widgets/**
          - test/**
          - integration_test/**
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maintainability-index: 50
    maximum-nesting: 5
    number-of-parameters: 5
    source-lines-of-code: 50
    technical-debt:
      threshold: 1
      todo-cost: 4
      ignore-cost: 8
      ignore-for-file-cost: 16
      as-dynamic-cost: 16
      deprecated-annotations-cost: 2
      file-nullsafety-migration-cost: 2
      unit-type: "hours"
  metrics-exclude:
    - lib/generated_plugin_registrant.dart
    - lib/**/*.gen.dart
    - lib/*.config.dart
    - lib/**/*.config.dart
    - lib/**/*.g.dart
    - lib/**/*.gr.dart
    - lib/main.reflectable.dart
    - lib/**/generated/**
    - lib/**/theme.dart
    - lib/**/widgets/**
    - lib/**/views/**
    - lib/**/dialog_service.dart
    - lib/**/messaging_center.dart
    - lib/**/navigation_service.dart
    - lib/common/exceptions/**
    - lib/data/database/base/**
    - test/**/*.config.dart
    - test/**/*.mocks.dart
  rules:
    # Common
    - avoid-duplicate-exports
    - avoid-dynamic
    - avoid-global-state
    - avoid-missing-enum-constant-in-map
    - avoid-nested-conditional-expressions
    - avoid-redundant-async
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - member-ordering:
        alphabetize: false
        order:
          - public-const-fields
          - public-static-final-fields
          - public-static-fields
          - private-static-const-fields
          - private-static-final-fields
          - constructors
          - factory-constructors
          - private-constructors
          - private-final-fields
          - private-late-final-fields
          - private-fields
          - public-final-fields
          - public-late-final-fields
          - public-getters
          - public-getters-setters
          - public-fields
          - protected-public-final-fields
          - protected-public-late-final-fields
          - public-static-methods
          - overridden-public-methods
          - public-methods
          - overridden-protected-methods
          - protected-methods
          - private-methods
          - private-static-methods
    - newline-before-return
    - no-boolean-literal-compare
    - no-equal-then-else
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-enums-by-name
    - prefer-first
    - prefer-iterable-of
    - prefer-last
    - prefer-trailing-comma

    # Flutter
    - always-remove-listener
    - avoid-border-all
    - avoid-returning-widgets
    - avoid-shrink-wrap-in-lists
    - avoid-unnecessary-setstate
    - avoid-expanded-as-spacer
    - avoid-wrapping-in-padding
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-extracting-callbacks
    - prefer-single-widget-per-file:
        ignore-private-widgets: true

analyzer:
  exclude:
    - lib/**/*.gen.dart
    - lib/*.config.dart
    - lib/**/*.config.dart
    - lib/**/*.g.dart
    - lib/**/*.gr.dart
    - lib/main.reflectable.dart
    - lib/**/generated/**
    - test/**/*.config.dart
    - test/**/*.mocks.dart
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  plugins:
    - dart_code_metrics

include: package:flutter_lints/flutter.yaml

# See https://dart-lang.github.io/linter/lints/index.html
linter:
  rules:
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_require_non_null_named_parameters
    - always_use_package_imports
    - avoid_dynamic_calls
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_double_and_int_checks
    - avoid_empty_else
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_print
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_types_on_closure_parameters
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    # - avoid_unused_constructor_parameters
    - avoid_void_async
    - avoid_web_libraries_in_flutter
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - cast_nullable_to_non_nullable
    - close_sinks
    - comment_references
    - constant_identifier_names
    - control_flow_in_finally
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - exhaustive_cases
    - file_names
    - hash_and_equals
    - implementation_imports
    - invariant_booleans
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    - library_names
    - library_prefixes
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_logic_in_create_state
    - non_constant_identifier_names
    - null_check_on_nullable_type_parameter
    - null_closures
    - only_throw_errors
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_is_not_operator
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    - recursive_getters
    - require_trailing_commas
    - sized_box_for_whitespace
    - slash_for_doc_comments
    - sort_child_properties_last
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_null_aware_assignments
    - unnecessary_null_checks
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_build_context_synchronously
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_is_even_rather_than_modulo
    - use_key_in_widget_constructors
    - use_late_for_private_fields_and_variables
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks
