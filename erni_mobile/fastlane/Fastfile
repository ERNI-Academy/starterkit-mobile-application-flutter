fastlane_require 'dotenv'

dart_defines = ""
secrets = {}
app_environment = ""

before_all do
  # `APP_ENVIRONMENT` must be set in your CI server, or export it before running fastlane
  app_environment = ENV["APP_ENVIRONMENT"]

  if app_environment.nil? || app_environment.empty?
    UI.user_error! "Please provide an environment using `export APP_ENVIRONMENT=YourEnv`"
  end

  puts "Loading variables and secrets for `#{app_environment}`"

  secrets = read_json(json_path: ".secrets/#{app_environment}.secrets")
  secrets.each { |k, v| dart_defines << "--dart-define \"#{k}=#{v}\" " }
end

desc "Build release"
lane :"build_android_release" do |options|
  output = options[:output]
  task = ""

  case output
    when "appbundle"
      task = "appbundle"
    else
      task = "apk"
  end

  if is_number?(options[:version_number]) && !options[:version_name].nil?
    version_number = options[:version_number]
    version_name = options[:version_name]

    puts "Building #{version_name} (#{version_number})"

    sh "flutter build #{task} --target-platform android-arm64 --build-number #{version_number} --build-name #{version_name} #{dart_defines}"
  else
    sh "flutter build #{task} --target-platform android-arm64 #{dart_defines}"
  end

  if task == "appbundle"
    "build/app/outputs/bundle/release/app-release.aab"
  else
    "build/app/outputs/apk/release/app-release.apk"
  end
end

desc "Build release"
lane :"build_ios_release" do |options|
  sh "cd ..; pod --version; sh ../scripts/gen_export_options_plist.sh #{app_environment}"

  if is_number?(options[:version_number]) && !options[:version_name].nil?
    version_number = options[:version_number]
    version_name = options[:version_name]

    puts "Building #{version_name} (#{version_number})"

    sh "cd ..; flutter build ipa --export-options-plist \"ios/Runner/ExportOptions.plist\" --build-number #{version_number} --build-name #{version_name} #{dart_defines}"
  else
    sh "cd ..; flutter build ipa --export-options-plist \"ios/Runner/ExportOptions.plist\" #{dart_defines}"
  end

  "build/ios/ipa/#{secrets[:appName]}.ipa"
end

desc "Build web release"
lane :"build_web_release" do |options|
  if is_number?(options[:version_number]) && !options[:version_name].nil?
    version_number = options[:version_number]
    version_name = options[:version_name]

    puts "Building #{version_name} (#{version_number})"

    sh "flutter build web --build-number #{version_number} --build-name #{version_name} #{dart_defines}"
  else
    sh "flutter build web #{dart_defines}"
  end

  "build/web"
end

def is_number? string
  true if Float(string) rescue false
end