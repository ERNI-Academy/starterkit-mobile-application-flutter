targets:
  $default:
    builders:

      injectable_generator|injectable_config_builder:
        generate_for:
          include:
            - lib/core/service_registrar.dart

      reflectable:
        enabled: false # Disable reflectable builder and run it after injectable_generator

      retrofit_generator:
        generate_for:
          include:
            - lib/features/**/*_api.dart

      auto_route_generator:auto_route_generator: # this for @RoutePage
        options:
          enable_cached_builds: true
        generate_for:
          - lib/**/presentation/**/**_view.dart

      auto_route_generator:auto_router_generator: # this for @AutoRouterConfig
        options:
          enable_cached_builds: true
        generate_for:
          - lib/core/presentation/navigation/navigation_router.dart

      drift_dev:
        options:
          data_class_to_companions: false

# Run reflectable after injectable_generator
# See https://github.com/dart-lang/build/issues/2701#issuecomment-1424669567 
# for more info on how to run builders in specific order
builders:
  customReflectable:
    import: "package:reflectable/reflectable_builder.dart"
    required_inputs: [".config.dart"] # The generated file of injectable_generator
    builder_factories: ["reflectableBuilder"]
    build_extensions: { ".dart": [".reflectable.dart"] }
    auto_apply: root_package
    build_to: source
    defaults:
      generate_for:
        include:
          - lib/main.dart
