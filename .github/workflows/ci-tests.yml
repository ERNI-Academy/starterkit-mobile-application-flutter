name: Tests

on:
  workflow_dispatch:
    inputs:
      target_environment:
        required: false
        type: choice
        description: Select environment
        default: dev
        options:
          - dev

  push:
    paths:
      - .github/**/*.yml
      - scripts/**
      - starterkit_app/**
    branches:
      - main

  pull_request:
    paths:
      - .github/**/*.yml
      - scripts/**
      - starterkit_app/**
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PROJECT_WORKING_DIRECTORY: "starterkit_app"

permissions: {}

jobs:
  run-tests:
    runs-on: macos-latest
    permissions: {}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: Set app environment
        uses: ./.github/workflows/steps/set-app-environment
        with:
          target_environment: ${{ github.event.inputs.target_environment }}

      - name: Download Isar binary
        run: |
          curl -L https://github.com/isar/isar/releases/download/4.0.0-dev.14/libisar_macos.dylib > ${{ env.PROJECT_WORKING_DIRECTORY }}/test/assets/isar.dylib

      - name: Install Flutter
        uses: ./.github/workflows/steps/install-flutter
        with:
          working_directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Run code generation
        uses: ./.github/workflows/steps/run-pub-get-and-code-generation
        with:
          generate_intl: "true"
          working_directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Add ignore-coverage to generated files
        run: |
          bash ../scripts/ignore_generated_files_from_coverage.sh
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Run tests
        run: |
          dart run full_coverage
          flutter test --coverage
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab # v4.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.PROJECT_WORKING_DIRECTORY }}/coverage/lcov.info
          fail_ci_if_error: true
          verbose: true
