name: Code Analysis

on:
  push:
    paths:
      - .github/**/*.yml
      - scripts/**
      - starterkit_app/**
    branches:
      - main

  pull_request:
    paths:
      - .github/**/*.yml
      - scripts/**
      - starterkit_app/**
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PROJECT_WORKING_DIRECTORY: "starterkit_app"

jobs:
  run-code-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Install Flutter
        uses: ./.github/workflows/steps/install-flutter
        with:
          working_directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Check formatting
        run: dart format --line-length=120 --set-exit-if-changed .
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Check for duplicate lines of code and generate badge
        run: |
          npm install -g jscpd
          npm install -g jscpd-badge-reporter
          npx jscpd lib --reporters badge,consoleFull --threshold 5
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Copy jscpd-badge.svg to root
        run: |
          cp ${{ env.PROJECT_WORKING_DIRECTORY }}/report/jscpd-badge.svg ../jscpd-badge.svg
          git status
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      # Needs to be run on ubuntu-latest
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: "jscpd-badge.svg"

      - name: Run code generation
        uses: ./.github/workflows/steps/run-pub-get-and-code-generation
        with:
          generate_intl: "true"
          working_directory: ${{ env.PROJECT_WORKING_DIRECTORY }}

      - name: Run code analysis
        run: |
          # Running static code analysis
          flutter analyze .

          # Running checks for code metrics
          dart run dart_code_metrics:metrics analyze lib --fatal-style --fatal-warnings --fatal-performance

          # Running checks for unused files
          # Add `--fatal-unused` if you want to fail this step if there are unused files
          dart run dart_code_metrics:metrics check-unused-files lib --no-fatal-unused

          # Running checks for unused code
          # Add `--fatal-unused` if you want to fail this step if there are unused code
          dart run dart_code_metrics:metrics check-unused-code lib --no-fatal-unused

          # Running checks for unused localizations
          # Add `--fatal-unused` if you want to fail this step if there are unused localizations
          dart run dart_code_metrics:metrics check-unused-l10n -p Il8n lib
        working-directory: ${{ env.PROJECT_WORKING_DIRECTORY }}
